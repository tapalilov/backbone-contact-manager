// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var Contact, ContactView, Directory, DirectoryView, contacts;
    contacts = [
      {
        name: "Contact 1",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "family"
      }, {
        name: "Contact 2",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "family"
      }, {
        name: "Contact 3",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "friend"
      }, {
        name: "Contact 4",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "colleague"
      }, {
        name: "Contact 5",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "family"
      }, {
        name: "Contact 6",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "colleague"
      }, {
        name: "Contact 7",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "friend"
      }, {
        name: "Contact 8",
        address: "1, a street, a town, a city, AB12 3CD",
        tel: "0123456789",
        email: "anemail@me.com",
        type: "family"
      }
    ];
    Contact = (function(_super) {

      __extends(Contact, _super);

      function Contact() {
        return Contact.__super__.constructor.apply(this, arguments);
      }

      Contact.prototype.defaults = {
        photo: './img/placeholder.png'
      };

      return Contact;

    })(Backbone.Model);
    Directory = (function(_super) {

      __extends(Directory, _super);

      function Directory() {
        return Directory.__super__.constructor.apply(this, arguments);
      }

      Directory.prototype.model = Contact;

      return Directory;

    })(Backbone.Collection);
    ContactView = (function(_super) {

      __extends(ContactView, _super);

      function ContactView() {
        return ContactView.__super__.constructor.apply(this, arguments);
      }

      ContactView.prototype.tagName = 'article';

      ContactView.prototype.className = "contact-container";

      ContactView.prototype.template = $("#contactTemplate").html();

      ContactView.prototype.render = function() {
        var tmpl;
        tmpl = _.template(this.template);
        this.$el.html(tmpl(this.model.toJSON()));
        return this;
      };

      return ContactView;

    })(Backbone.View);
    DirectoryView = (function(_super) {

      __extends(DirectoryView, _super);

      function DirectoryView() {
        return DirectoryView.__super__.constructor.apply(this, arguments);
      }

      DirectoryView.prototype.el = $('#contacts');

      DirectoryView.prototype.initialize = function() {
        this.collection = new Directory(contacts);
        return this.render();
      };

      DirectoryView.prototype.render = function() {
        var that;
        that = this;
        _.each(this.collection.models, function(item) {
          return that.renderContact(item);
        });
        return this;
      };

      DirectoryView.prototype.renderContact = function(item) {
        var contactView;
        contactView = new ContactView({
          model: item
        });
        return this.$el.append(contactView.render().el);
      };

      return DirectoryView;

    })(Backbone.View);
    return window.directoryView = new DirectoryView();
  });

}).call(this);
